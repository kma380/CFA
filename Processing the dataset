# Processing Book Crossing Dataset:

import pandas as pd
import numpy as np

import functions as f

path = 'data/original/'

df_ratings = pd.read_csv(path + 'BX-Book-Ratings.csv', sep=';', encoding='ansi')
df_books = pd.read_csv(path + 'BX-Books.csv', sep=';', encoding='ansi', escapechar='\\')
df_users = pd.read_csv(path + 'BX-Users.csv', sep=';', encoding='ansi')

for df in [df_ratings, df_books, df_users]:
    df.columns = [f.colname_fix(col) for col in df.columns]

print('Ratings:\nNumber of ratings: %d\nNumber of books: %d\nNumber of users: %d' % (len(df_ratings),
                                                                                     len(df_ratings['isbn'].unique()),
                                                                                     len(df_ratings['user_id'].unique())))
print('\nNumber of books: %d' % len(df_books))
print('\nNumber of users: %d' % len(df_users))

f.ascii_check_bulk(df_ratings)
f.ascii_check_bulk(df_books)
f.ascii_check_bulk(df_users)

# Filtering Observations:

df_ratings['isbn_check'] = df_ratings['isbn'].apply(f.ascii_check)
df_ratings = df_ratings[df_ratings['isbn_check']==0]

df_users['country'] = df_users['location'].apply(lambda x: x.split(', ')[-1].title())
df_users['country_check'] = df_users['country'].apply(f.ascii_check)
df_users.loc[df_users['country_check']==1, 'country'] = np.nan

df_ratings.drop(['isbn_check'], axis=1, inplace=True)
df_books.drop(['image_url_s', 'image_url_m', 'image_url_l'], axis=1, inplace=True)
df_users.drop(['country_check'], axis=1, inplace=True)

df_ratings_explicit = df_ratings[df_ratings['book_rating']!=0]
df_ratings_implicit = df_ratings[df_ratings['book_rating']==0]

print('Explicit ratings: %d\nImplicit ratings: %d' % (len(df_ratings_explicit), len(df_ratings_implicit)))

df_ratings_explicit.to_csv('data/ratings_explicit.csv', encoding='utf-8', index=False)
df_ratings_implicit.to_csv('data/ratings_implicit.csv', encoding='utf-8', index=False)
df_books.to_csv('data/books.csv', encoding='utf-8', index=False)
df_users.to_csv('data/users.csv', encoding='utf-8', index=False)

# Reducing Dimentionality:

user_ratings_threshold = 3

filter_users = df_ratings_explicit['user_id'].value_counts()
filter_users_list = filter_users[filter_users >= user_ratings_threshold].index.to_list()

df_ratings_top = df_ratings_explicit[df_ratings_explicit['user_id'].isin(filter_users_list)]

print('Filter: users with at least %d ratings\nNumber of records: %d' % (user_ratings_threshold, len(df_ratings_top)))

book_ratings_threshold_perc = 0.1
book_ratings_threshold = len(df_ratings_top['isbn'].unique()) * book_ratings_threshold_perc

filter_books_list = df_ratings_top['isbn'].value_counts().head(int(book_ratings_threshold)).index.to_list()
df_ratings_top = df_ratings_top[df_ratings_top['isbn'].isin(filter_books_list)]

print('Filter: top %d%% most frequently rated books\nNumber of records: %d' % (book_ratings_threshold_perc*100, len(df_ratings_top)))

df_ratings_top.to_csv('data/ratings_top.csv', encoding='utf-8', index=False)
